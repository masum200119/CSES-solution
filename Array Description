#include<bits/stdc++.h>
using namespace std;
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
using namespace __gnu_pbds; 
#define ordered_set tree<int, nuint_type,less<int>, rb_tree_tag,tree_order_statistics_source_update> 
#define all(x) x.begin(),x.end()
// #define sort(a) sort(a.begin(),a.end())
// #define unq(x) x.erase(unique(aint(x)),x.end());
#define ll long long
#define int long long
#define endl "\n"
#define Endl "\n"
#define hae cout<<"YES"<<endl;
#define nah cout<<"NO"<<endl;
#define Billah_A_name_to_be_Remembered ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define pb push_back
#define pp pop_back
#define vtr vector<int>
#define vpr vector<pair<int,int>>
#define sz size()
#define print(x) cout<<x<<Endl;
#define ff first
#define ss second
// #define fncc (auto valid =[&] (int x) -> auto { };)
#define printaay(a) for(int i=0;i<a.sz;i++)cout<<a[i]<<' ';cout<<endl;
/*vector<bitset<k/21>> v(n);
bitset<k/21>kk(a[i]);
v[i]=kk;*/

void Nothing()
{
    #ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
    // freopen("output - Copy.txt","w",stdout);
    #endif
}
const int mod=1000000000+7;
int getans(vector<int>&arr,int n,int m,vector<vector<int>>&dp)
{
    for(int i=0;i<n;i++)
    {
        if(i==0)
        {
            if(arr[i]==0)
            {
                for(int j=1;j<=m;j++)
                {
                    dp[i][j]=1;
                }
            }
            else
            {
                dp[i][arr[i]]=1;
            }
        }
        else
        {
            if(arr[i]==0)
            {
                for (int val = 1; val <= m; val++)
                {
                    dp[i][val] = (dp[i - 1][val - 1]
                                + dp[i - 1][val]
                                + dp[i - 1][val + 1])
                                % mod;
                }
            }
            else
            {
                dp[i][arr[i]] = (dp[i - 1][arr[i] - 1]
                                + dp[i - 1][arr[i]]
                                + dp[i - 1][arr[i] + 1]) % mod;
            }
        }
    }
    int ans=0;
    for(int i=1;i<=m;i++)
    {
        ans=(ans+dp[n-1][i])%mod;
    }
    return ans;
}
void Chaos()
{
    
    int n,m;
    cin>>n>>m;
    vector<int>arr(n);
    for(int i=0;i<n;i++)
    {
        cin>>arr[i];
    }

    vector<vector<int>>dp(n,vector<int>(m+2,0));
    int ans=getans(arr,n,m,dp);
    print(ans);

}
signed main()
{
    Nothing();
    Billah_A_name_to_be_Remembered;
    int __=1;
    
    // cin>>__;
    for(int i=1; __--;i++)
    {
       // cout<<"Case "<<i<<": ";
        
        Chaos();
    }
    return 0;
}
